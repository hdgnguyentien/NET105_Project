// <auto-generated />
using System;
using Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace _2_Data.Migrations
{
    [DbContext(typeof(CuaHangDbContext))]
    [Migration("20230220155623_05")]
    partial class _05
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.ModelsClass.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChucVu", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdKH")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdKH");

                    b.ToTable("GioHang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9779e43b-fcfc-40a0-b778-fa6f4757fd55"),
                            IdKH = new Guid("3f8c0eff-a06a-4b07-a449-8832c622290d")
                        },
                        new
                        {
                            Id = new Guid("87c18de0-9653-408e-9f7d-36b2f5a3d890"),
                            IdKH = new Guid("f572907f-4e58-4ee3-b282-8100a3a2043f")
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.GiohangChitiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdGioHang")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSPChitiet")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGioHang");

                    b.HasIndex("IdSPChitiet");

                    b.ToTable("GiohangChitiet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("040174d7-fb1c-4fff-912c-215f1562e2ea"),
                            GiaBan = 20000m,
                            IdGioHang = new Guid("9779e43b-fcfc-40a0-b778-fa6f4757fd55"),
                            IdSPChitiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            SoLuong = 3
                        },
                        new
                        {
                            Id = new Guid("e5fb1f37-454c-4aae-968d-d19c6e8cc9fa"),
                            GiaBan = 10000m,
                            IdGioHang = new Guid("87c18de0-9653-408e-9f7d-36b2f5a3d890"),
                            IdSPChitiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            SoLuong = 2
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.Hang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9db8c0c-bf87-4e16-bdd2-a9fee4b14b4a"),
                            TenHang = "Adidas"
                        },
                        new
                        {
                            Id = new Guid("da7a593f-20e5-407e-85c6-4bb0a97f1a73"),
                            TenHang = "Nike"
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.HinhAnh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdChiTietSP")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LinkAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdChiTietSP");

                    b.ToTable("HinhAnh", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e508ba75-5185-4ef4-b533-2099fff74a84"),
                            IdChiTietSP = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            LinkAnh = "C:\\Users\\Admin\\source\\repos\\NET105_Project\\ProjectViews\\wwwroot\\AnhNhanVien\\307ec916-d15c-41b9-aeb8-ebfbf7c58033_nature-3082832.jpg"
                        },
                        new
                        {
                            Id = new Guid("b596d1db-4113-4ed7-99e2-fa96a945d23c"),
                            IdChiTietSP = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            LinkAnh = "C:\\Users\\Admin\\source\\repos\\NET105_Project\\ProjectViews\\wwwroot\\AnhNhanVien\\5752c6ba-f2e2-4331-95f2-2abaad283f46_nature-3082832.jpg"
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdKH")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdMaGiamGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayTao")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TongTien")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKH");

                    b.HasIndex("IdMaGiamGia");

                    b.HasIndex("IdNV");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.HoadonChitiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("GiaBan")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdHoaDon")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSPChitiet")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SoLuong")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdSPChitiet");

                    b.ToTable("HoadonChitiet", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.KhachHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhachHang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f8c0eff-a06a-4b07-a449-8832c622290d"),
                            DiaChi = "1",
                            Email = "a",
                            GioiTinh = true,
                            MatKhau = "1",
                            NgaySinh = new DateTime(2023, 2, 20, 22, 56, 23, 131, DateTimeKind.Local).AddTicks(3129),
                            Sdt = "1",
                            Ten = "a"
                        },
                        new
                        {
                            Id = new Guid("f572907f-4e58-4ee3-b282-8100a3a2043f"),
                            DiaChi = "2",
                            Email = "b",
                            GioiTinh = true,
                            MatKhau = "1",
                            NgaySinh = new DateTime(2023, 2, 20, 22, 56, 23, 131, DateTimeKind.Local).AddTicks(3143),
                            Sdt = "2",
                            Ten = "b"
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.KichCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Size")
                        .IsRequired()
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("KichCo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd3aeb4b-dcdb-445b-9669-f5a1ce0c29d7"),
                            Size = 38f
                        },
                        new
                        {
                            Id = new Guid("670ad56f-8d6a-478e-8ca5-bef8d0e38af5"),
                            Size = 39f
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.MaGiamGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatdau")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetthuc")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("PhanTramGiam")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SoLuong")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MaGiamGia", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.MauSac", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MauSac", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a6c0c50-fb67-44ea-9c62-ad0e0f67ab3c"),
                            TenMau = "Xanh"
                        },
                        new
                        {
                            Id = new Guid("9a1b3786-d0d0-402a-bfd8-10db04f8e6ed"),
                            TenMau = "Do"
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.NhanVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<Guid?>("IdCvu")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGuiBaoCao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGuiBcNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCvu");

                    b.HasIndex("IdGuiBcNavigationId");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdHang")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdHang");

                    b.ToTable("SanPham", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("01bf8a6c-d89a-4db2-9068-af277be488ae"),
                            IdHang = new Guid("b9db8c0c-bf87-4e16-bdd2-a9fee4b14b4a"),
                            Ten = "Giay 1",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("9a1b3786-d0d0-402a-bfd8-10db04f8e6ed"),
                            IdHang = new Guid("da7a593f-20e5-407e-85c6-4bb0a97f1a73"),
                            Ten = "Giay 2",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.SanphamChitiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaNhap")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdKichCo")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdMauSac")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSP")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSPChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSPChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKichCo");

                    b.HasIndex("IdMauSac");

                    b.HasIndex("IdSP");

                    b.ToTable("SanphamChitiet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            AnhDaiDien = "null",
                            GiaBan = 100000m,
                            GiaNhap = 80000m,
                            IdKichCo = new Guid("bd3aeb4b-dcdb-445b-9669-f5a1ce0c29d7"),
                            IdMauSac = new Guid("7a6c0c50-fb67-44ea-9c62-ad0e0f67ab3c"),
                            IdSP = new Guid("01bf8a6c-d89a-4db2-9068-af277be488ae"),
                            MaSPChiTiet = "SP1",
                            SoLuong = 10,
                            TenSPChiTiet = "V1",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            AnhDaiDien = "null",
                            GiaBan = 100000m,
                            GiaNhap = 80000m,
                            IdKichCo = new Guid("670ad56f-8d6a-478e-8ca5-bef8d0e38af5"),
                            IdMauSac = new Guid("9a1b3786-d0d0-402a-bfd8-10db04f8e6ed"),
                            IdSP = new Guid("9a1b3786-d0d0-402a-bfd8-10db04f8e6ed"),
                            MaSPChiTiet = "SP2",
                            SoLuong = 10,
                            TenSPChiTiet = "V1",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.TheLoai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TheLoai", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.TheLoaiSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdChiTietSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTheLoai")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdChiTietSP");

                    b.HasIndex("IdTheLoai");

                    b.ToTable("TheLoaiSanPham", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.GioHang", b =>
                {
                    b.HasOne("Data.ModelsClass.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("IdKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Data.ModelsClass.GiohangChitiet", b =>
                {
                    b.HasOne("Data.ModelsClass.GioHang", "gioHang")
                        .WithMany("giohangChitiets")
                        .HasForeignKey("IdGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.SanphamChitiet", "sanphamChitiet")
                        .WithMany("giohangChitiets")
                        .HasForeignKey("IdSPChitiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gioHang");

                    b.Navigation("sanphamChitiet");
                });

            modelBuilder.Entity("Data.ModelsClass.HinhAnh", b =>
                {
                    b.HasOne("Data.ModelsClass.SanphamChitiet", "sanphamChitiet")
                        .WithMany("hinhAnhs")
                        .HasForeignKey("IdChiTietSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sanphamChitiet");
                });

            modelBuilder.Entity("Data.ModelsClass.HoaDon", b =>
                {
                    b.HasOne("Data.ModelsClass.KhachHang", "khachHang")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.MaGiamGia", "maGiamGia")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdMaGiamGia");

                    b.HasOne("Data.ModelsClass.NhanVien", "nhanVien")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdNV");

                    b.Navigation("khachHang");

                    b.Navigation("maGiamGia");

                    b.Navigation("nhanVien");
                });

            modelBuilder.Entity("Data.ModelsClass.HoadonChitiet", b =>
                {
                    b.HasOne("Data.ModelsClass.HoaDon", "hoaDon")
                        .WithMany("hoadonChitiets")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.SanphamChitiet", "sanphamChitiet")
                        .WithMany("hoadonChitiets")
                        .HasForeignKey("IdSPChitiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hoaDon");

                    b.Navigation("sanphamChitiet");
                });

            modelBuilder.Entity("Data.ModelsClass.NhanVien", b =>
                {
                    b.HasOne("Data.ModelsClass.ChucVu", "chucVu")
                        .WithMany("nhanViens")
                        .HasForeignKey("IdCvu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.NhanVien", "IdGuiBcNavigation")
                        .WithMany("InverseIdGuiBcNavigation")
                        .HasForeignKey("IdGuiBcNavigationId");

                    b.Navigation("IdGuiBcNavigation");

                    b.Navigation("chucVu");
                });

            modelBuilder.Entity("Data.ModelsClass.SanPham", b =>
                {
                    b.HasOne("Data.ModelsClass.Hang", "hang")
                        .WithMany("sanPhams")
                        .HasForeignKey("IdHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hang");
                });

            modelBuilder.Entity("Data.ModelsClass.SanphamChitiet", b =>
                {
                    b.HasOne("Data.ModelsClass.KichCo", "kichCo")
                        .WithMany("sanphamChitiets")
                        .HasForeignKey("IdKichCo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.MauSac", "mauSac")
                        .WithMany("sanphamChitiets")
                        .HasForeignKey("IdMauSac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.SanPham", "sanPham")
                        .WithMany("sanphamChitiets")
                        .HasForeignKey("IdSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kichCo");

                    b.Navigation("mauSac");

                    b.Navigation("sanPham");
                });

            modelBuilder.Entity("Data.ModelsClass.TheLoaiSanPham", b =>
                {
                    b.HasOne("Data.ModelsClass.SanphamChitiet", "sanphamChitiet")
                        .WithMany("theLoaiSanPhams")
                        .HasForeignKey("IdChiTietSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.TheLoai", "theLoai")
                        .WithMany("theloaiSanPhams")
                        .HasForeignKey("IdTheLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sanphamChitiet");

                    b.Navigation("theLoai");
                });

            modelBuilder.Entity("Data.ModelsClass.ChucVu", b =>
                {
                    b.Navigation("nhanViens");
                });

            modelBuilder.Entity("Data.ModelsClass.GioHang", b =>
                {
                    b.Navigation("giohangChitiets");
                });

            modelBuilder.Entity("Data.ModelsClass.Hang", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("Data.ModelsClass.HoaDon", b =>
                {
                    b.Navigation("hoadonChitiets");
                });

            modelBuilder.Entity("Data.ModelsClass.KhachHang", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("Data.ModelsClass.KichCo", b =>
                {
                    b.Navigation("sanphamChitiets");
                });

            modelBuilder.Entity("Data.ModelsClass.MaGiamGia", b =>
                {
                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("Data.ModelsClass.MauSac", b =>
                {
                    b.Navigation("sanphamChitiets");
                });

            modelBuilder.Entity("Data.ModelsClass.NhanVien", b =>
                {
                    b.Navigation("InverseIdGuiBcNavigation");

                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("Data.ModelsClass.SanPham", b =>
                {
                    b.Navigation("sanphamChitiets");
                });

            modelBuilder.Entity("Data.ModelsClass.SanphamChitiet", b =>
                {
                    b.Navigation("giohangChitiets");

                    b.Navigation("hinhAnhs");

                    b.Navigation("hoadonChitiets");

                    b.Navigation("theLoaiSanPhams");
                });

            modelBuilder.Entity("Data.ModelsClass.TheLoai", b =>
                {
                    b.Navigation("theloaiSanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
